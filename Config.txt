# Configure Docker-Swarm

## Useful Commands

- `docker-machine ls` - List Docker Machines
- `docker-machine ip <machine name>` - Get IP address of Docker Machine
- `docker-machine ssh <machinename>` - SSH into Docker Machine
- `docker swarm init --advertise-addr <manager ip>` - Create Swarm
- `docker info` - Get Current State of Swarm
- `docker node ls` - List connected Nodes
- `docker service create --replicas 1 --name <name> <container> <parameters>` - Creates a Swarm Service
- `docker service create --name <SERVICE-NAME> --publish <PUBLISHED-PORT>:<TARGET-PORT> <IMAGE>` - create a Swarm Service mapped to port
- `docker service ls` - List of running services
- `docker service inspect --pretty <name>` - Gets details on a service "--pretty displays info in yaml, without is JSON"
- `docker service ps <name>` - See which node is running service.
- `docker ps` - Execute on working node to see details
- `docker service scale <name>=<number of tasks>` - Scale a service across nodes.
- `docker service rm <name>` - remove the service
- `docker service update --image <imagename> <service-name>` - Update running service
- `docker service update --publish-add <PUBLISHED-PORT>:<TARGET-PORT> <service-name>` - Update port on running service


## Steps
1. SSH into Manager. `docker-machine ssh manager1`
2. Create SWARM using IP address of manager1. `docker swarm init --advertise-addr 192.168.99.100`
3. SSH into Node2. `docker-machine ssh node2`
4. Create Worker. `docker swarm join --token SWMTKN-1-2t8c1u818x91y4ugehdv0q054bfkm0jhursvcnjh4qigfmotvl-8fmrk8e95iaw4ifv629wmzzse 192.168.99.100:2377`
5. SSH into Node3. `docker-machine ssh node3`
6. Create Worker. `docker swarm join --token SWMTKN-1-2t8c1u818x91y4ugehdv0q054bfkm0jhursvcnjh4qigfmotvl-8fmrk8e95iaw4ifv629wmzzse 192.168.99.100:2377`
7. SSH into Manager. `docker-machine ssh manager1`
8. Check if nodes are running. `docker node ls`
9. Create Service `docker service create --replicas 1 --name helloworld alpine ping docker.com`
